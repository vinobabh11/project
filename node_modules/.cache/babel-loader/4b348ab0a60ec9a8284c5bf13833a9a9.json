{"ast":null,"code":"var _jsxFileName = \"A:\\\\Users\\\\vinoba\\\\Desktop\\\\react\\\\project-03\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaulCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingItemIndex = state.items.findIndex;\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updateTotalAmount\n    };\n  }\n\n  return defaulCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaulCartState);\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"+5vAK6U/UQZ2jW4/JGpTMnQLISY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["A:/Users/vinoba/Desktop/react/project-03/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaulCartState","items","totalAmount","cartReducer","state","action","type","updateTotalAmount","item","price","amount","existingItemIndex","findIndex","updatedItems","concat","CartProvider","props","cartState","dispatchCartAction","addItemHandler","removeItemHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,eAAe,GAAE;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAAvB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAASC,MAAT,KAAoB;AACpC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AACrB,UAAMC,iBAAiB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA9E;AAEA,UAAMC,iBAAiB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAtC;AACA,UAAMC,YAAY,GAAGT,KAAK,CAACH,KAAN,CAAYa,MAAZ,CAAmBT,MAAM,CAACG,IAA1B,CAArB;AAEA,WAAO;AACHP,MAAAA,KAAK,EAAEY,YADJ;AAEHX,MAAAA,WAAW,EAAEK;AAFV,KAAP;AAIH;;AACD,SAAOP,eAAP;AACH,CAbD;;AAeA,MAAMe,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCpB,UAAU,CAACK,WAAD,EAAcH,eAAd,CAAlD;;AAEA,QAAMmB,cAAc,GAAIX,IAAD,IAAU;AAC7BU,IAAAA,kBAAkB,CAAC;AAACZ,MAAAA,IAAI,EAAE,KAAP;AAAcE,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACF,GAFF;;AAIA,QAAMY,iBAAiB,GAAIC,EAAD,IAAQ;AAC9BH,IAAAA,kBAAkB,CAAC;AAACZ,MAAAA,IAAI,EAAE,QAAP;AAAiBe,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAChBrB,IAAAA,KAAK,EAAEgB,SAAS,CAAChB,KADD;AAEhBC,IAAAA,WAAW,EAAEe,SAAS,CAACf,WAFP;AAGhBqB,IAAAA,OAAO,EAAEJ,cAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBD;;GAAMV,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react'\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaulCartState ={\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state , action) => {\r\n    if(action.type === 'ADD'){\r\n        const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        const existingItemIndex = state.items.findIndex\r\n        const updatedItems = state.items.concat(action.item);\r\n        \r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updateTotalAmount\r\n        };\r\n    }\r\n    return defaulCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaulCartState);\r\n\r\n    const addItemHandler = (item) => {\r\n        dispatchCartAction({type: 'ADD', item: item});\r\n     };\r\n\r\n    const removeItemHandler = (id) => {\r\n        dispatchCartAction({type: 'REMOVE', id: id}); \r\n    };\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemHandler,\r\n        removeItem: removeItemHandler,\r\n    };\r\n\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider\r\n"]},"metadata":{},"sourceType":"module"}